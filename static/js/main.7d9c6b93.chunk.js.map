{"version":3,"sources":["hook/pathButton.js","hook/sidebar.js","hook/jordan.js","hook/sampleDot.js","hook/line.js","hook/wings.js","hook/square.js","hook/svgMap.js","hook/svgDisplay.js","App.js","serviceWorker.js","index.js"],"names":["PathButton","viewbox","path","setDPath","setDPathTemp","className","onClick","viewBox","width","height","fill","d","Sidebar","dPath","sampleCount","setSampleCount","precision","setprecision","view","setView","showLines","setShowLines","showLWings","setShowLWings","showRWings","setShowRWings","showSquares","setShowSquares","scanPos","setScanPos","useState","xPosition","setX","dPathTemp","useForm","defaultValues","handleSubmit","register","errors","useEffect","style","transform","minHeight","map","i","key","onSubmit","value","length","Number","selectView","htmlFor","id","type","name","onChange","ev","target","ref","required","validate","str","toLowerCase","message","defaultValue","axis","xstep","xmin","xmax","x","disabled","res","defaultChecked","Jordan","cx","cy","pointScale","r","Line","line","lineScale","a","b","x1","y1","x2","y2","strokeWidth","stroke","Wings","wings","left","right","Square","square","c","console","log","SVGMap","svgGeom","nodes","lines","squares","wingsScores","matrix","setMatrix","setPointScale","setLineScale","dragging","setDragging","startX","setStartX","startY","setStartY","timer","setTimer","timesup","zoom","scale","m","len","onDragStart","e","event","timeoutId","window","setTimeout","bind","startPosX","clientX","changedTouches","startPosY","clientY","onDragMove","clearTimeout","y","dx","dy","pan","onDragEnd","visualfeatures","items","n","result","interval","push","xmlns","onMouseDown","onTouchStart","onMouseMove","onTouchMove","onMouseUp","onTouchEnd","onWheel","deltaY","onDoubleClick","join","node","wing","SVGDisplay","useRef","setNodes","setLines","setWings","setWingsScores","setSquares","allWings","halfHypoDistance","Math","sqrt","pow","yDiff","xDiff","slope","invSlope","midpoint","slopeChange","sin","atan","invSlopeChange","calcWings","posA","allLines","posD","posC","offSetB","nextPos","offset","posB","calcLines","properties","svgPathProperties","totalLength","getTotalLength","allNodes","getPointAtLength","calcNodes","wingsMinDistanceToPath","lMinDist","MAX_SAFE_INTEGER","rMinDist","smallestDist","j","lDist","rDist","max","calcWingsScores","requiredDist","allSquares","calcSquares","Loaded","wasm","greet","Unloaded","loading","loadWasm","App","setLoading","setWasm","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.7d9c6b93.chunk.js","sourcesContent":["import React from \"react\";\n\nconst PathButton = ({ viewbox, path, setDPath, setDPathTemp }) => {\n  return (\n    <>\n      <div\n        className=\"s-button\"\n        onClick={() => {\n          setDPath(path);\n          setDPathTemp(path);\n        }}\n      >\n        <svg viewBox={viewbox} width=\"38\" height=\"38\">\n          <path fill=\"#FF0066\" d={path} />\n        </svg>\n      </div>\n    </>\n  );\n};\n\nexport default PathButton;\n","import React, { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport Slider from \"react-input-slider\";\nimport PathButton from \"./pathButton\";\n\nconst Sidebar = ({\n  width,\n  height,\n  dPath,\n  setDPath,\n  sampleCount,\n  setSampleCount,\n  precision,\n  setprecision,\n  view,\n  setView,\n  showLines,\n  setShowLines,\n  showLWings,\n  setShowLWings,\n  showRWings,\n  setShowRWings,\n  showSquares,\n  setShowSquares,\n  scanPos,\n  setScanPos,\n}) => {\n  const [xPosition, setX] = useState(-width);\n  const [dPathTemp, setDPathTemp] = useState(\n    \"M25.1,-46.5C31.3,-40,33.9,-30.6,43.3,-22.3C52.7,-14.1,68.8,-7,76.2,4.2C83.5,15.5,82.1,31.1,68.2,31.5C54.4,32,28,17.4,14.5,17.2C1.1000000000000014,17,0.5,31.1,-8,45C-16.6,58.9,-33.1,72.5,-42.5,70.3C-51.9,68.2,-54.1,50.3,-62,36C-69.9,21.7,-83.6,10.8,-75,5C-66.4,-0.9000000000000004,-35.6,-1.8000000000000007,-21.4,-5.300000000000001C-7.200000000000003,-8.799999999999997,-9.7,-14.899999999999999,-8.899999999999999,-24.5C-8.1,-34,-4,-47,2.7,-51.7C9.5,-56.4,19,-53,25.1,-46.5Z\"\n  );\n  const buttonPaths = [\n    [\n      \"-70 -70 150 150\",\n      \"M25.1,-46.5C31.3,-40,33.9,-30.6,43.3,-22.3C52.7,-14.1,68.8,-7,76.2,4.2C83.5,15.5,82.1,31.1,68.2,31.5C54.4,32,28,17.4,14.5,17.2C1.1000000000000014,17,0.5,31.1,-8,45C-16.6,58.9,-33.1,72.5,-42.5,70.3C-51.9,68.2,-54.1,50.3,-62,36C-69.9,21.7,-83.6,10.8,-75,5C-66.4,-0.9000000000000004,-35.6,-1.8000000000000007,-21.4,-5.300000000000001C-7.200000000000003,-8.799999999999997,-9.7,-14.899999999999999,-8.899999999999999,-24.5C-8.1,-34,-4,-47,2.7,-51.7C9.5,-56.4,19,-53,25.1,-46.5Z\",\n    ],\n    [\n      \"20 0 150 150\",\n      \"M 80,10 c -9.722415999999999,0.21530200000000002 -15.898272,6.404308 -20,10 -3.873288,3.395436 -5.810168,4.75774 -10,10 -4.189832,5.24226 -11.911896,15.447572 -10.985772,24.215302 C 39.701128,60.718272 56.312886000000006,66.625554 60,70 c 3.4286920000000003,3.137938 3.28162,7.71661 0,10 -3.28162,2.28339 -26.141934,2.043232 -30,8 -3.7891559999999997,5.850374 -2.27515,17.112934000000003 0,22 3.2703180000000005,7.024704 24.960514,28.200904 30,30 5.052058000000001,1.803584 8.093247999999999,2.811872 15.660134,0.798926 C 83.17622,138.799494 104.88153199999999,132.471404 110,130 115.11846800000001,127.528596 116.76675,124.235788 112,120 105.605802,114.31804199999999 97.165412,113.838992 90,110 82.834588,106.161008 76.020686,95.73202 82.275,91.725 88.529314,87.71798 93.85216,85.69384199999999 102,90 c 8.147839999999999,4.306158 30.574126,20.681052 40,20 9.425874,-0.6810539999999999 5.640588,-11.545822 2,-18 -3.6405900000000004,-6.454178000000001 -5.96779,-8.548008 -12,-12 -6.03221,-3.4519919999999997 -14.664240000000001,-2.35001 -22,-10 -7.335762,-7.64999 2.6820340000000003,-9.150182 9.9375,-10.275 C 127.192966,58.60018 134.111104,58.405282 130,50 125.888896,41.594718 117.564336,25.432944 110,20 102.435664,14.567056 89.722416,9.784698 80,10 Z\",\n    ],\n    [\"15 15 70 70\", \"M 25, 50 a 25,25 0 1,1 50,0 a 25,25 0 1,1 -50,0 Z\"],\n    [\n      \"0 -100 175 175\",\n      \"M 0.51,-7.232 0.51,-10.872 c -0.47,-2.924 4.01,-3.888 5.62,-5.358 0.8,-0.729 2.11,-2.218 3.34,-2.142 1.08,0.07 1.32,-1.547 2.73,-1.82 2.3,-0.445 3.47,1.779 4.85,-1.26 0.43,-0.941 1.86,-0.547 2.68,-0.655 1.48,-0.196 2.97,-0.397 4.36,-0.913 2.8,-1.036 2.92,-4.046 5.31,-5.308 0.98,-0.521 2.27,-0.578 3.31,-0.962 1.28,-0.474 2.12,-1.908 3.44,-2.173 0.48,-0.1 3.08,-0.309 2.02,-1.679 -0.69,-0.885 -1.78,-1.207 -0.37,-2.496 -2.02,-0.554 -0.2,-2.668 1.28,-2.544 1.96,0.164 3.77,-0.534 4.46,-2.367 1.33,-3.511 10.39,-0.401 12.98,-1.065 -2.97,-1.338 2.16,-2.972 0.55,-4.213 -0.76,-0.587 -1.61,-1.104 -2.23,-1.854 -0.71,-0.867 -0.34,-2.11 -1.04,-3.172 -0.74,-1.11 -0.33,-2.024 -0.12,-3.129 0.2,-1.036 -0.6,-1.048 -0.49,-2.053 0.11,-0.939 0.1,-2.071 0.1,-3.006 0,-1.255 -0.81,-2.262 0.43,-3.236 -1.29,-0.528 -0.77,-1.249 -0.96,-2.216 -0.25,-1.288 -2.48,-1.706 -2.97,-3.031 2.4,0 3.42,-0.587 5.45,-1.627 0.89,-0.453 1.45,-0.454 1.98,-1.388 0.48,-0.827 0.83,-1.521 1.71,-1.991 0.5,-0.266 1.46,-1.038 1.98,-0.624 0.68,0.537 1.54,-0.396 1.99,-0.81 1.18,-1.073 2.79,1.628 3.99,-0.84 1.61,-3.307 7.15,-4.738 10.4,-5.112 2.31,-0.266 4.65,-0.902 6.98,-0.745 1.74,0.117 2.93,-2.099 4.44,-1.246 0.66,0.371 0.51,0.163 0.76,-0.25 0,-0.09 2.66,-0.05 3.05,-0.206 2.25,-0.893 4.52,-0.556 6.89,-0.622 1.98,-0.05 2.44,0.354 3.95,1.487 1.92,1.447 2.58,-0.693 4.25,-0.897 0.53,-0.06 3.85,-0.209 3.67,-1.192 -0.33,-1.77 2.09,-0.68 2.66,-0.294 1.2,0.805 3.01,1.212 4.24,0.228 0.68,-0.541 0.24,-1.245 1.52,-0.924 0.92,0.228 1.63,0.9 2.63,0.847 -0.84,1.391 1.24,0.904 1.9,0.732 1.32,-0.343 2.74,-0.02 4.01,-0.445 0.1,1.794 -2.18,2.673 -3.17,3.816 2.7,0.582 0.11,4.377 0.65,6.116 0.95,3.021 0.56,5.304 -0.1,8.284 -0.53,2.452 -3.25,4.362 -5.08,5.971 -1.06,0.938 -0.54,3.388 0.1,4.427 1,1.681 0.54,3.513 2.61,4.299 2.83,1.072 2,4.651 4.28,6.355 1.05,0.791 2.3,1.363 3.19,2.356 1.21,1.343 1.39,3.544 1.67,5.248 0.58,3.52 2.25,7.431 2.25,10.98 0,0.958 -2.02,0.591 -0.72,2.323 1.26,1.679 2.3,3.653 2.72,5.719 1.43,7.11 -0.68,7.066 0.4,10.712 0.51,1.739 0.53,3.01 -0.14,4.703 -0.76,1.911 -0.1,3.698 0.35,5.605 0.62,2.883 -0.66,2.929 -2.71,4.477 -2.33,1.766 1.55,5.196 2.56,6.754 1.9,2.912 0.76,6.369 3.28,9.088 0.96,1.044 2.07,-0.208 3.11,-0.13 1.3,0.1 2.72,1.084 3.95,1.529 2.79,1.016 3.73,3.364 4.77,6.022 0.49,1.259 0.98,1.411 -0.38,2.185 -14.2,9.052 -28.52,18.11 -40.61,29.885 -0.7,1.012 -2.95,3.544 -4.69,4.51 -1.33,0.733 -3.28,0.8 -4.74,1.103 -1.99,0.411 -3.98,0.801 -5.97,1.222 -0.99,0.211 -9.72,3.21 -9.35,0.121 0.13,-1.089 0.91,-1.511 0.81,-2.717 0,-0.463 0.1,-2.895 -0.39,-3.136 -1.47,-0.734 -3.3,-1.07 -4.92,-1.381 -0.8,-0.154 -1.87,-2.184 -2.48,-2.034 -3.49,0.858 -4.04,-2.627 -4.67,-3.148 -0.75,-0.616 -2.03,-0.672 -2.71,-1.189 -0.76,-0.581 -0.1,-2.025 -0.56,-2.805 -0.58,-0.981 -1.58,-1.834 -2.53,-2.391 -1.61,-0.954 -3.12,-2.087 -4.59,-3.234 -3.67,-2.849 -7.28,-5.783 -10.93,-8.654 -14.09,-11.076 -28.16,-22.111 -42.9,-32.316 -3.52,-2.44 -7.05,-4.845 -10.6,-7.232Z\",\n    ],\n  ];\n\n  const { handleSubmit, register, errors } = useForm({\n    defaultValues: {\n      dPath,\n      sampleCount,\n      precision,\n      showLines,\n      showLWings,\n      showRWings,\n    },\n  });\n\n  const onSubmit = (value) => {\n    value.dPath && value.dPath.length > 0 && setDPath(value.dPath);\n    value.sampleCount && setSampleCount(Number(value.sampleCount));\n    value.precision && setprecision(Number(value.precision));\n    value.selectView && setView(Number(value.selectView));\n    typeof value.showLines && setShowLines(value.showLines);\n    typeof value.showLWings && setShowLWings(value.showLWings);\n    typeof value.showRWings && setShowRWings(value.showRWings);\n    typeof value.showSquares && setShowSquares(value.showSquares);\n  };\n\n  const toggleMenu = () => {\n    if (xPosition < 0) {\n      setX(0);\n    } else {\n      setX(-width);\n    }\n  };\n\n  useEffect(() => {\n    setX(0);\n  }, []);\n\n  return (\n    <>\n      <div\n        className=\"side-bar\"\n        style={{\n          transform: `translatex(${xPosition}px)`,\n          width: width - 30,\n          minHeight: height,\n        }}\n      >\n        <button\n          onClick={() => toggleMenu()}\n          className=\"toggle-menu\"\n          style={{\n            transform: `translate(${width - 30}px, 2vh)`,\n          }}\n        ></button>\n        <div className=\"content\">\n          <label>Sample Shapes: </label>\n          <div className=\"shape-buttons\">\n            {buttonPaths.map((path, i) => (\n              <PathButton\n                key={i}\n                viewbox={path[0]}\n                path={path[1]}\n                setDPath={setDPath}\n                setDPathTemp={setDPathTemp}\n              />\n            ))}\n          </div>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <br />\n            <div>\n              <label htmlFor=\"dPath\">SVG Path: </label>\n              <input\n                id=\"dPath\"\n                type=\"text\"\n                name=\"dPath\"\n                className=\"field\"\n                value={dPathTemp}\n                onChange={(ev) => setDPathTemp(ev.target.value)}\n                ref={register({\n                  required: false,\n                  validate: (str) =>\n                    (str &&\n                      str[0].toLowerCase() === \"m\" &&\n                      str[str.length - 1].toLowerCase() === \"z\") ||\n                    \"Please format SVG Path correctly, beginning with M and closing with Z\",\n                })}\n              />\n              <p className=\"error-message\">\n                {errors.dPath && errors.dPath.message}\n              </p>\n            </div>\n\n            <div>\n              <label htmlFor=\"sampleCount\">Sample Count: </label>\n              <input\n                id=\"sampleCount\"\n                type=\"text\"\n                name=\"sampleCount\"\n                className=\"field\"\n                ref={register({\n                  validate: (value) =>\n                    (0 <= value && value <= 1000) ||\n                    \"Samples only go up to 1000\",\n                })}\n              />\n              <p className=\"error-message\">\n                {errors.sampleCount && errors.sampleCount.message}\n              </p>\n            </div>\n\n            <div>\n              <label htmlFor=\"precision\">Precision: </label>\n              <input\n                id=\"precision\"\n                type=\"text\"\n                name=\"precision\"\n                className=\"field\"\n                ref={register({\n                  validate: (value) =>\n                    (0 <= value && value <= 1) || \"Please stay between 0 and 1\",\n                })}\n              />\n              <p className=\"error-message\">\n                {errors.precision && errors.precision.message}\n              </p>\n            </div>\n\n            <hr />\n            <h3>Display View</h3>\n\n            <div>\n              <label htmlFor=\"selectView\">Select View:</label>\n              <div>\n                <select\n                  id=\"selectView\"\n                  name=\"selectView\"\n                  className=\"select-field field\"\n                  defaultValue={view}\n                  ref={register({\n                    validate: (value) =>\n                      (0 <= value && value < 3) ||\n                      \"Please select a valuid value\",\n                  })}\n                >\n                  <option value={0}>Full</option>\n                  <option value={1}>Point</option>\n                  <option value={2}>Ring</option>\n                </select>\n              </div>\n              <p className=\"error-message\">\n                {errors.selectView && errors.selectView.message}\n              </p>\n            </div>\n\n            <div className={view === 0 ? \"disabled\" : \"\"}>\n              {\"Node: \" + scanPos}\n            </div>\n            <Slider\n              className=\"slider\"\n              axis=\"x\"\n              xstep={1}\n              xmin={0}\n              xmax={sampleCount - 2}\n              x={scanPos}\n              disabled={view === 0}\n              onChange={(res) => setScanPos(res.x)}\n            />\n\n            <hr />\n            <h3>Show Features</h3>\n\n            <div>\n              <label className=\"checkLabel\" htmlFor=\"showLines\">\n                <div>\n                  <input\n                    id=\"showLines\"\n                    type=\"checkbox\"\n                    className=\"checkbox\"\n                    name=\"showLines\"\n                    defaultChecked={showLines}\n                    ref={register}\n                  />\n                  Lines\n                </div>\n              </label>\n              <p className=\"error-message\">\n                {errors.showLines && errors.showLines.message}\n              </p>\n            </div>\n\n            <div>\n              <label className=\"checkLabel\" htmlFor=\"showLWings\">\n                <div>\n                  <input\n                    id=\"showLWings\"\n                    type=\"checkbox\"\n                    className=\"checkbox\"\n                    name=\"showLWings\"\n                    defaultChecked={showLWings}\n                    ref={register}\n                  />\n                  Left Wings\n                </div>\n              </label>\n              <p className=\"error-message\">\n                {errors.showLWings && errors.showLWings.message}\n              </p>\n            </div>\n\n            <div>\n              <label className=\"checkLabel\" htmlFor=\"showRWings\">\n                <div>\n                  <input\n                    id=\"showRWings\"\n                    type=\"checkbox\"\n                    className=\"checkbox\"\n                    name=\"showRWings\"\n                    defaultChecked={showRWings}\n                    ref={register}\n                  />\n                  Right Wings\n                </div>\n              </label>\n              <p className=\"error-message\">\n                {errors.showRWings && errors.showRWings.message}\n              </p>\n            </div>\n\n            <div>\n              <label className=\"checkLabel\" htmlFor=\"showSquares\">\n                <div>\n                  <input\n                    id=\"showSquares\"\n                    type=\"checkbox\"\n                    className=\"checkbox\"\n                    name=\"showSquares\"\n                    defaultChecked={showSquares}\n                    ref={register}\n                  />\n                  Squares\n                </div>\n              </label>\n              <p className=\"error-message\">\n                {errors.showSquares && errors.showSquares.message}\n              </p>\n            </div>\n\n            <div className=\"submit-area\">\n              <button className=\"submit-button content-button\" type=\"submit\">\n                Generate\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Sidebar;\n","import React from \"react\";\n\nconst Jordan = ({ dPath, transform }) => {\n  return (\n    <>\n      <path fill=\"#FF0066\" d={dPath} transform={transform} />\n    </>\n  );\n};\n\nexport default Jordan;\n","import React from \"react\";\n\nconst Jordan = ({ id, cx, cy, transform, pointScale }) => {\n  return (\n    <>\n      <circle\n        id={id}\n        cx={cx}\n        cy={cy}\n        r={pointScale}\n        fill=\"blue\"\n        transform={transform}\n      />\n    </>\n  );\n};\n\nexport default Jordan;\n","import React from \"react\";\n\nconst Line = ({ line, transform, lineScale }) => {\n  const { a, b } = line;\n  return (\n    <>\n      <line\n        x1={a[0]}\n        y1={a[1]}\n        x2={b[0]}\n        y2={b[1]}\n        strokeWidth={lineScale}\n        stroke=\"cyan\"\n        transform={transform}\n      />\n    </>\n  );\n};\n\nexport default Line;\n","import React from \"react\";\n\nconst Wings = ({\n  line,\n  wings,\n  showLWings,\n  showRWings,\n  transform,\n  pointScale,\n  lineScale,\n}) => {\n  const { a, b } = line;\n  const { left, right } = wings;\n  // const colors = [\n  //   \"#363f9c\",\n  //   \"#464096\",\n  //   \"#564190\",\n  //   \"#66438a\",\n  //   \"#764483\",\n  //   \"#86457d\",\n  //   \"#954777\",\n  //   \"#a54871\",\n  //   \"#b5496b\",\n  //   \"#c54a64\",\n  //   \"#d54b5e\",\n  //   \"#e54d58\",\n  //   \"#f54e52\",\n  // ];\n  return (\n    <>\n      {showLWings && (\n        <>\n          <line\n            x1={a[0]}\n            y1={a[1]}\n            x2={left[0]}\n            y2={left[1]}\n            strokeWidth={lineScale}\n            stroke=\"purple\"\n            transform={transform}\n          />\n          <circle\n            cx={left[0]}\n            cy={left[1]}\n            r={pointScale}\n            fill=\"purple\"\n            transform={transform}\n          />\n          {/* <line\n        x1={b[0]}\n        y1={b[1]}\n        x2={left[0]}\n        y2={left[1]}\n        strokeWidth={lineScale}\n        stroke=\"green\"\n        transform={transform}\n      /> */}\n        </>\n      )}\n      {showRWings && (\n        <>\n          <line\n            x1={a[0]}\n            y1={a[1]}\n            x2={right[0]}\n            y2={right[1]}\n            strokeWidth={lineScale}\n            stroke=\"blue\"\n            transform={transform}\n          />\n          <circle\n            cx={right[0]}\n            cy={right[1]}\n            r={pointScale}\n            fill=\"blue\"\n            transform={transform}\n          />\n          {/* <line\n        x1={b[0]}\n        y1={b[1]}\n        x2={right[0]}\n        y2={right[1]}\n        strokeWidth={lineScale}\n        stroke=\"green\"\n        transform={transform}\n      /> */}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Wings;\n","import React from \"react\";\n\nconst Square = ({ square, transform, lineScale }) => {\n  const { a, b, c, d } = square;\n  console.log(square);\n\n  return (\n    <>\n      <line\n        x1={a[0]}\n        y1={a[1]}\n        x2={b[0]}\n        y2={b[1]}\n        strokeWidth={lineScale}\n        stroke=\"black\"\n        transform={transform}\n      />\n      <line\n        x1={b[0]}\n        y1={b[1]}\n        x2={c[0]}\n        y2={c[1]}\n        strokeWidth={lineScale}\n        stroke=\"black\"\n        transform={transform}\n      />\n      <line\n        x1={c[0]}\n        y1={c[1]}\n        x2={d[0]}\n        y2={d[1]}\n        strokeWidth={lineScale}\n        stroke=\"black\"\n        transform={transform}\n      />\n      <line\n        x1={d[0]}\n        y1={d[1]}\n        x2={a[0]}\n        y2={a[1]}\n        strokeWidth={lineScale}\n        stroke=\"black\"\n        transform={transform}\n      />\n    </>\n  );\n};\n\nexport default Square;\n","import React, { useState } from \"react\";\nimport Jordan from \"./jordan\";\nimport SampleDot from \"./sampleDot\";\nimport Line from \"./line\";\nimport Wings from \"./wings\";\nimport Square from \"./square\";\n\nconst SVGMap = ({\n  svgGeom,\n  dPath,\n  nodes,\n  lines,\n  wings,\n  wingsScores,\n  squares,\n  showLines,\n  showLWings,\n  showRWings,\n  showSquares,\n}) => {\n  const [matrix, setMatrix] = useState([2, 0, 0, 2, 200, 200]);\n  const [pointScale, setPointScale] = useState(0.5);\n  const [lineScale, setLineScale] = useState(0.1);\n  const [dragging, setDragging] = useState(false);\n  const [startX, setStartX] = useState(0);\n  const [startY, setStartY] = useState(0);\n  const visualSamplesCount = 3444; // number choosen to limit patterns in common sample counts\n  const [timer, setTimer] = useState(null);\n\n  const timesup = (ev) => {\n    setTimer(null);\n    zoom(0.6);\n  };\n\n  const pan = (dx, dy) => {\n    const m = [...matrix];\n    m[4] += dx;\n    m[5] += dy;\n    setMatrix(m);\n  };\n\n  const zoom = (scale) => {\n    const m = [...matrix];\n    const len = m.length;\n    for (let i = 0; i < len; i++) {\n      m[i] *= scale;\n    }\n    m[4] += ((1 - scale) * 400) / 2;\n    m[5] += ((1 - scale) * 400) / 2;\n    setMatrix(m);\n    setPointScale(pointScale / scale);\n    setLineScale(lineScale / scale);\n  };\n\n  const onDragStart = (e) => {\n    const event = { ...e };\n    const timeoutId = window.setTimeout(timesup.bind(null, event), 500);\n    setTimer(timeoutId);\n\n    const startPosX =\n      typeof e.clientX === \"undefined\"\n        ? e.changedTouches[0].clientX\n        : e.clientX;\n    const startPosY =\n      typeof e.clientY === \"undefined\"\n        ? e.changedTouches[0].clientY\n        : e.clientY;\n\n    setDragging(true);\n    setStartX(startPosX);\n    setStartY(startPosY);\n  };\n\n  const onDragMove = (e) => {\n    if (timer) {\n      // Stop zoomout on move\n      window.clearTimeout(timer);\n      setTimer(null);\n    }\n    if (!dragging) {\n      return;\n    }\n\n    const x =\n      typeof e.clientX === \"undefined\"\n        ? e.changedTouches[0].clientX\n        : e.clientX;\n    const y =\n      typeof e.clientY === \"undefined\"\n        ? e.changedTouches[0].clientY\n        : e.clientY;\n\n    console.log(x, y);\n    const dx = x - startX;\n    const dy = y - startY;\n\n    pan(dx, dy);\n\n    setStartX(x);\n    setStartY(y);\n  };\n\n  const onDragEnd = (e) => {\n    if (timer) {\n      window.clearTimeout(timer);\n      setTimer(null);\n    }\n    setDragging(false);\n  };\n\n  const onWheel = (e) => {\n    if (e.deltaY < 0) {\n      zoom(1.05);\n    } else {\n      zoom(0.95);\n    }\n  };\n\n  const visualfeatures = (items, n) => {\n    let result = [items[0]];\n    const totalItems = items.length - 2;\n    const interval = ~~(totalItems / (n - 2));\n    for (let i = 1; i < items.length; i += interval) {\n      result.push(items[i]);\n    }\n    result.push(items[items.length - 1]);\n    return result;\n  };\n\n  return (\n    <>\n      <svg\n        className=\"svg\"\n        ref={svgGeom}\n        width=\"100px\"\n        height=\"100px\"\n        viewBox=\"0 0 400 400\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        onMouseDown={(e) => onDragStart(e)}\n        onTouchStart={(e) => onDragStart(e)}\n        onMouseMove={(e) => onDragMove(e)}\n        onTouchMove={(e) => onDragMove(e)}\n        onMouseUp={(e) => onDragEnd(e)}\n        onTouchEnd={(e) => onDragEnd(e)}\n        onWheel={(e) => onWheel(e)}\n        onDoubleClick={(e) => zoom(1.5)}\n      >\n        <g transform={`matrix(${matrix.join(\" \")})`}>\n          <Jordan dPath={dPath} />\n          {nodes.length < 1000 &&\n            nodes.map((node, i) => (\n              <SampleDot\n                key={i + \"a\"}\n                cx={node.x}\n                cy={node.y}\n                pointScale={pointScale}\n              />\n            ))}\n          {nodes.length >= 1000 &&\n            visualfeatures(nodes, 1000).map((node, i) => (\n              <SampleDot\n                key={i + \"a\"}\n                cx={node.x}\n                cy={node.y}\n                pointScale={pointScale}\n              />\n            ))}\n          {showLines &&\n            lines.length < visualSamplesCount &&\n            lines.map((line, i) => (\n              <Line key={i} line={line} lineScale={lineScale} />\n            ))}\n          {showLines &&\n            lines.length >= visualSamplesCount &&\n            visualfeatures(lines, visualSamplesCount).map((line, i) => (\n              <Line key={i} line={line} lineScale={lineScale} />\n            ))}\n          {(showLWings || showRWings) &&\n            wings.length < visualSamplesCount &&\n            wings.map((wing, i) => (\n              <Wings\n                key={i}\n                line={lines[i]}\n                wings={wing}\n                showLWings={showLWings}\n                showRWings={showRWings}\n                pointScale={pointScale}\n                lineScale={lineScale}\n              />\n            ))}\n          {(showLWings || showRWings) &&\n            wings.length >= visualSamplesCount &&\n            visualfeatures(wings, visualSamplesCount).map((wing, i) => (\n              <Wings\n                key={i}\n                line={lines[i]}\n                wings={wing}\n                showLWings={showLWings}\n                showRWings={showRWings}\n                pointScale={pointScale}\n                lineScale={lineScale}\n              />\n            ))}\n          {showSquares &&\n            squares.map((square, i) => (\n              <Square key={i} square={square} lineScale={pointScale} />\n            ))}\n        </g>\n      </svg>\n    </>\n  );\n};\n\nexport default SVGMap;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport Sidebar from \"./sidebar\";\nimport SVGMap from \"./svgMap\";\n\nimport { svgPathProperties } from \"svg-path-properties\";\n\nconst SVGDisplay = () => {\n  const svgGeom = useRef(null);\n\n  const [dPath, setDPath] = useState(\n    \"M25.1,-46.5C31.3,-40,33.9,-30.6,43.3,-22.3C52.7,-14.1,68.8,-7,76.2,4.2C83.5,15.5,82.1,31.1,68.2,31.5C54.4,32,28,17.4,14.5,17.2C1.1000000000000014,17,0.5,31.1,-8,45C-16.6,58.9,-33.1,72.5,-42.5,70.3C-51.9,68.2,-54.1,50.3,-62,36C-69.9,21.7,-83.6,10.8,-75,5C-66.4,-0.9000000000000004,-35.6,-1.8000000000000007,-21.4,-5.300000000000001C-7.200000000000003,-8.799999999999997,-9.7,-14.899999999999999,-8.899999999999999,-24.5C-8.1,-34,-4,-47,2.7,-51.7C9.5,-56.4,19,-53,25.1,-46.5Z\"\n  );\n\n  const [sampleCount, setSampleCount] = useState(200);\n  const [nodes, setNodes] = useState([]);\n  const [lines, setLines] = useState([]);\n  const [wings, setWings] = useState([]);\n  const [wingsScores, setWingsScores] = useState([]);\n  const [squares, setSquares] = useState([]);\n\n  const [view, setView] = useState(1);\n\n  const [showLines, setShowLines] = useState(false);\n  const [showLWings, setShowLWings] = useState(true);\n  const [showRWings, setShowRWings] = useState(true);\n  const [showSquares, setShowSquares] = useState(true);\n\n  const [precision, setprecision] = useState(0.08);\n  const [scanPos, setScanPos] = useState(0);\n\n  const calcNodes = () => {\n    const properties = new svgPathProperties(dPath);\n    const totalLength = properties.getTotalLength();\n\n    const allNodes = [];\n\n    if (sampleCount > 1) {\n      for (let i = 1; i <= sampleCount; i++) {\n        allNodes.push(\n          properties.getPointAtLength((1 / sampleCount) * totalLength * i)\n        );\n      }\n    }\n\n    setNodes(allNodes);\n    return allNodes;\n  };\n\n  const calcLines = (nodes) => {\n    let posA = 0;\n    const allLines = [];\n\n    if (sampleCount > 1) {\n      switch (view) {\n        case 1:\n          const posD = scanPos < sampleCount ? scanPos : 0;\n          let posC = posD + 1;\n          while (posC !== posD) {\n            allLines.push({\n              a: [nodes[posD].x, nodes[posD].y],\n              b: [nodes[posC].x, nodes[posC].y],\n            });\n            posC === sampleCount - 1 ? (posC = 0) : posC++;\n          }\n          break;\n\n        case 2:\n          let offSetB = scanPos + 1;\n          while (posA < sampleCount) {\n            const nextPos = (posA + offSetB) % sampleCount;\n            allLines.push({\n              a: [nodes[posA].x, nodes[posA].y],\n              b: [nodes[nextPos].x, nodes[nextPos].y],\n            });\n            posA++;\n          }\n          break;\n\n        default:\n          let offset = posA + 1;\n          while (offset < sampleCount / 2 + 1) {\n            while (posA < sampleCount) {\n              const posB = (posA + offset) % sampleCount;\n              allLines.push({\n                a: [nodes[posA].x, nodes[posA].y],\n                b: [nodes[posB].x, nodes[posB].y],\n              });\n              posA++;\n            }\n            posA = 0;\n            offset++;\n          }\n      }\n    }\n\n    setLines(allLines);\n    return allLines;\n  };\n\n  const calcWings = (lines) => {\n    const allWings = [];\n\n    for (let i = 0; i < lines.length; i++) {\n      const hypoDistance = Math.sqrt(\n        Math.pow(lines[i].a[0] - lines[i].b[0], 2) +\n          Math.pow(lines[i].a[1] - lines[i].b[1], 2)\n      );\n      const halfHypoDistance = hypoDistance / 2;\n      const yDiff = lines[i].b[1] - lines[i].a[1];\n      const xDiff = lines[i].b[0] - lines[i].a[0];\n      const slope = yDiff / xDiff;\n      const invSlope = -(1 / slope);\n      const midpoint = [\n        (lines[i].a[0] + lines[i].b[0]) / 2,\n        (lines[i].a[1] + lines[i].b[1]) / 2,\n      ];\n\n      const slopeChange = halfHypoDistance * Math.sin(Math.atan(slope));\n      const invSlopeChange = halfHypoDistance * Math.sin(Math.atan(invSlope));\n\n      const left = [\n        xDiff > 0 ? midpoint[0] + slopeChange : midpoint[0] - slopeChange,\n        yDiff > 0 ? midpoint[1] + invSlopeChange : midpoint[1] - invSlopeChange,\n      ];\n      const right = [\n        xDiff < 0 ? midpoint[0] + slopeChange : midpoint[0] - slopeChange,\n        yDiff < 0 ? midpoint[1] + invSlopeChange : midpoint[1] - invSlopeChange,\n      ];\n\n      // index 0: left Wing\n      // index 1: right Wing\n      allWings.push({\n        left: left,\n        right: right,\n      });\n    }\n    setWings(allWings);\n    return allWings;\n  };\n\n  const calcWingsScores = (wings) => {\n    const wingsMinDistanceToPath = [];\n\n    let lMinDist = Number.MAX_SAFE_INTEGER;\n    let rMinDist = Number.MAX_SAFE_INTEGER;\n    let smallestDist = Number.MAX_SAFE_INTEGER;\n\n    for (let i = 0; i < wings.length; i++) {\n      for (let j = 0; j < nodes.length; j++) {\n        const lDist = Math.sqrt(\n          Math.pow(wings[i].left[0] - nodes[j].x, 2) +\n            Math.pow(wings[i].left[1] - nodes[j].y, 2)\n        );\n        const rDist = Math.sqrt(\n          Math.pow(wings[i].right[0] - nodes[j].x, 2) +\n            Math.pow(wings[i].right[1] - nodes[j].y, 2)\n        );\n        if (lMinDist < smallestDist && rMinDist < smallestDist) {\n          smallestDist = Math.max(lMinDist, rMinDist);\n        }\n        if (i + 1 !== j && i - 1 !== j) {\n          lMinDist = lDist < lMinDist ? lDist : lMinDist;\n          rMinDist = rDist < rMinDist ? rDist : rMinDist;\n        }\n      }\n      wingsMinDistanceToPath.push({ left: lMinDist, right: rMinDist });\n      lMinDist = Number.MAX_SAFE_INTEGER;\n      rMinDist = Number.MAX_SAFE_INTEGER;\n    }\n\n    setWingsScores([wingsMinDistanceToPath, smallestDist]);\n    return [wingsMinDistanceToPath, smallestDist];\n  };\n\n  const calcSquares = (\n    lines,\n    wings,\n    wingsScores,\n    smallestDist,\n    requiredDist\n  ) => {\n    const allSquares = [];\n\n    for (let i = 0; i < wingsScores.length; i++) {\n      const target = smallestDist;\n\n      if (\n        target < requiredDist &&\n        -target <= wingsScores[i].left &&\n        wingsScores[i].left <= target &&\n        -target <= wingsScores[i].right &&\n        wingsScores[i].right <= target\n      ) {\n        allSquares.push({\n          a: lines[i].a,\n          b: wings[i].left,\n          c: lines[i].b,\n          d: wings[i].right,\n        });\n      }\n    }\n    setSquares(allSquares);\n  };\n\n  useEffect(() => {\n    const nodes = calcNodes();\n    const lines = calcLines(nodes);\n    calcWings(lines);\n    scanPos >= sampleCount && setScanPos(0);\n    // eslint-disable-next-line\n  }, [view, dPath, sampleCount, scanPos]);\n\n  useEffect(() => {\n    if (wings.length > 0) {\n      calcWingsScores(wings);\n    }\n    // eslint-disable-next-line\n  }, [wings]);\n\n  useEffect(() => {\n    /* \n    Minimum required distance to create a square must be greater than distance\n    between two first 2 points on divided svg path\n    */\n    const requiredDist =\n      lines && lines.length > 0\n        ? Math.sqrt(\n            Math.pow(lines[0].b[0] - lines[0].a[0], 2) +\n              Math.pow(lines[0].b[1] - lines[0].a[1], 2)\n          ) / 2\n        : 0;\n    if (wingsScores.length > 0) {\n      calcSquares(lines, wings, wingsScores[0], wingsScores[1], requiredDist);\n    }\n    // eslint-disable-next-line\n  }, [wingsScores, precision]);\n\n  return (\n    <>\n      <Sidebar\n        width={300}\n        height=\"100vh\"\n        dPath={dPath}\n        setDPath={setDPath}\n        sampleCount={sampleCount}\n        setSampleCount={setSampleCount}\n        precision={precision}\n        setprecision={setprecision}\n        view={view}\n        setView={setView}\n        showLines={showLines}\n        setShowLines={setShowLines}\n        showLWings={showLWings}\n        setShowLWings={setShowLWings}\n        showRWings={showRWings}\n        setShowRWings={setShowRWings}\n        showSquares={showSquares}\n        setShowSquares={setShowSquares}\n        scanPos={scanPos}\n        setScanPos={setScanPos}\n      />\n\n      <div className=\"svgWrap\">\n        <SVGMap\n          svgGeom={svgGeom}\n          dPath={dPath}\n          nodes={nodes}\n          lines={lines}\n          wings={wings}\n          wingsScores={wingsScores}\n          squares={squares}\n          showLines={showLines}\n          showLWings={showLWings}\n          showRWings={showRWings}\n          showSquares={showSquares}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default SVGDisplay;\n","import React, { useState } from \"react\";\nimport SVGDisplay from \"./hook/svgDisplay.js\";\nimport \"./App.css\";\n\nconst Loaded = ({ wasm }) => {\n  return (\n    <div>\n      <button onClick={wasm.greet}>Click me</button>\n    </div>\n  );\n};\nconst Unloaded = ({ loading, loadWasm }) => {\n  return loading ? (\n    <div>Loading...</div>\n  ) : (\n    <>\n      <button onClick={loadWasm}>Load Wasm</button>\n    </>\n  );\n};\n\nconst App = () => {\n  const [loading, setLoading] = useState(false);\n  const [wasm, setWasm] = useState(null);\n\n  const loadWasm = async () => {\n    try {\n      setLoading(true);\n      const wasm = await import(\"wasm_insquare\");\n      setWasm(wasm);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {wasm ? (\n          <Loaded wasm={wasm} />\n        ) : (\n          <Unloaded loading={loading} loadWasm={loadWasm} />\n        )}\n      </header>\n      {wasm ? <SVGDisplay /> : <SVGDisplay />}\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}